frame infLoop {
  loop (IL) {
    !inc ax
  }

  loop IL2 
    !inc ax
}

frame main {
  reg x : ax

  loop JL {
    !inc ax

    if (x > 5, BL) {
      break (JL)
    }
  }

  loop PL {
    !xor ax, ax
    break PL
  }

  !nop
}

======= nasm =======
section .text
infLoop:
enter 0, 0
  IL_begin:
      inc ax
  jmp IL_begin
  IL_end:
  IL2_begin:
    inc ax
  jmp IL2_begin
  IL2_end:
leave
ret

section .text
main:
enter 0, 0
  JL_begin:
      inc ax
      cmp ax, 5
      jg BL_begin
      jmp BL_end
      BL_begin:
          jmp JL_end
      BL_end:
  jmp JL_begin
  JL_end:
  PL_begin:
      xor ax, ax
      jmp PL_end
  jmp PL_begin
  PL_end:
  nop
leave
ret
